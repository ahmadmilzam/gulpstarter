/* ==========================================================================
   Alert Box
   ========================================================================== */

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-default-settings: false !default;

@if ($imported-default-settings == false) {
  @warn "Oops! Have you included default settings and module settings files?";
}

// VARS
$alert-border-width: rem-calc(3);
$alert-border-style: solid;


.alert{
  position: relative;
  display: block;
  padding: rem-calc(halve($base-spacing-unit));
  margin-bottom: rem-calc($base-spacing-unit);

  border-left-color: color-level(#EEEEEE, -2);
  border-left-width: 4px;
  border-left-style: solid;

  background-color: #EEEEEE;

  @include transition(opacity);
}

.form-msg{display:none;}

  .alert__heading{
    font-weight: 700;
    margin-bottom: rem-calc(halve($base-spacing-unit));
  }
  .alert__body{
    margin: 0;
  }
  .alert__list{
    margin: 0;
    padding: 0;
    list-style-type: none;
  }
    .alert__item{
      display: block;
    }

  .alert__close{
    position: absolute;
    top: 0;
    right: rem-calc(quarter($base-spacing-unit));
    opacity: 0.7;
    font-weight: 700;
    font-size: 1.5rem;
    line-height: 1;
    cursor: pointer;
    padding: rem-calc(5);
  }

.alert--error{
  background-color: color('alert', 'light');
  border-left-color: color-level( color('alert') , -2);

  color: foreground-color( color('alert', 'light'), color('black'), color('white'));

  .alert__close{
    color: color-level( color('alert') , -2);
  }
}

.alert--success{
  background-color: color('success', 'light');
  border-left-color: color-level( color('success') , -2);
  color: foreground-color( color('alert', 'light'), color('black'), color('white'));

  .alert__close{
    color: color-level( color('success') , -2);
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@-webkit-keyframes bounceInDown {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -200%, 0);
    transform: translate3d(0, -200%, 0);
  }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
    transform: translate3d(0, 25px, 0);
  }

  75% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  90% {
    -webkit-transform: translate3d(0, 5px, 0);
    transform: translate3d(0, 5px, 0);
  }

  to {
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes bounceInDown {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -200%, 0);
    transform: translate3d(0, -200%, 0);
  }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
    transform: translate3d(0, 25px, 0);
  }

  75% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  90% {
    -webkit-transform: translate3d(0, 5px, 0);
    transform: translate3d(0, 5px, 0);
  }

  to {
    -webkit-transform: none;
    transform: none;
  }
}

@-webkit-keyframes bounceOutUp {
  20% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    -webkit-transform: translate3d(0, 20px, 0);
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(0, -200%, 0);
    transform: translate3d(0, -200%, 0);
  }
}

@keyframes bounceOutUp {
  20% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    -webkit-transform: translate3d(0, 20px, 0);
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(0, -200%, 0);
    transform: translate3d(0, -200%, 0);
  }
}

@-webkit-keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(0, -90%, 0);
    transform: translate3d(0, -90%, 0);
  }
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(0, -90%, 0);
    transform: translate3d(0, -90%, 0);
  }
}

@-webkit-keyframes shake {
  from, to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    -webkit-transform: translate3d(10px, 0, 0);
    transform: translate3d(10px, 0, 0);
  }
}

@keyframes shake {
  from, to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    -webkit-transform: translate3d(10px, 0, 0);
    transform: translate3d(10px, 0, 0);
  }
}

.alert-in,
.alert-out{
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
}

.alert-in{
  -webkit-animation-name: bounceInDown;
          animation-name: bounceInDown;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
}
.alert-out{
  -webkit-animation-name: bounceOutUp;
          animation-name: bounceOutUp;

  -webkit-animation-duration: .8s;
          animation-duration: .8s;
}

.alert-in.alert--error{
  -webkit-animation-name: shake;
          animation-name: shake;
}
// .alert-in.alert--success{
//   -webkit-animation-name: bounceInDown;
//           animation-name: bounceInDown;

//   -webkit-animation-duration: .7s;
//           animation-duration: .7s;
// }
// .alert-out.alert--success{
//   -webkit-animation-name: bounceOutUp;
//           animation-name: bounceOutUp;

//   -webkit-animation-duration: .8s;
//           animation-duration: .8s;
// }
